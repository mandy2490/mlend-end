name: ct-then-cd

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  # ---------------- CT: Train & maybe promote ----------------
  train_and_promote:
    runs-on: ubuntu-latest
    outputs:
      did_promote: ${{ steps.out.outputs.did_promote }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.PROJECT_ID }}

      - name: Install Python deps (training)
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r training/requirements.txt

      - name: Train and maybe promote
        env:
          PROJECT_ID:   ${{ secrets.PROJECT_ID }}
          BQ_TABLE:     ${{ secrets.BQ_TABLE }}
          MODEL_BUCKET: ${{ secrets.MODEL_BUCKET }}
        run: python training/train.py

      - name: Read promotion flag
        id: out
        run: |
          if [ -f promotion.json ]; then
            val=$(python -c "import json; print(json.load(open('promotion.json'))['did_promote'])")
          else
            val=false
          fi
          echo "did_promote=$val" >> $GITHUB_OUTPUT
          echo "did_promote=$val"

      - name: Upload metrics artifact
        uses: actions/upload-artifact@v4
        with:
          name: model-metrics
          path: promotion.json
          if-no-files-found: ignore

  # ---------------- CD: Build & Deploy API if promoted ----------------
  build_and_deploy:
    needs: train_and_promote
    if: needs.train_and_promote.outputs.did_promote == 'True' || needs.train_and_promote.outputs.did_promote == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.PROJECT_ID }}

      - name: Configure Docker auth for Artifact Registry
        run: gcloud auth configure-docker ${{ secrets.REGION }}-docker.pkg.dev --quiet

      - name: Build & Push image
        env:
          IMAGE: ${{ secrets.REPO_PATH }}/taxi-fare-api:${{ github.sha }}
        run: |
          docker build -f docker/Dockerfile.serve -t "$IMAGE" .
          docker push "$IMAGE"

      - name: Deploy to Cloud Run
        env:
          IMAGE:  ${{ secrets.REPO_PATH }}/taxi-fare-api:${{ github.sha }}
          REGION: ${{ secrets.REGION }}
        run: |
          gcloud run deploy taxi-fare-api \
            --image "$IMAGE" \
            --region "$REGION" \
            --allow-unauthenticated \
            --platform managed \
            --service-account gh-actions@${{ secrets.PROJECT_ID }}.iam.gserviceaccount.com \
            --set-env-vars PROJECT_ID=${{ secrets.PROJECT_ID }},MODEL_BUCKET=${{ secrets.MODEL_BUCKET }}
